<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cf0dda33-50f5-4858-bf66-4ce66df6359b" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/etc/jmx_exporter/config_kafka.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/etc/prometheus/prometheus.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/etc/secrets/kafka_client_jaas.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/etc/secrets/kafka_server_jaas.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/etc/secrets/zookeeper_jaas.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/etc/zookeeper.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/generate-jmx-configs.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/dashboards/grafana_dashboard_broker_hard_disk_usage.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/dashboards/grafana_dashboard_broker_jvm_os.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/dashboards/grafana_dashboard_broker_performance.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/dashboards/grafana_dashboard_broker_zookeeper.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/dashboards/grafana_dashboard_client_consumers_fetch_lag.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/dashboards/grafana_dashboard_cluster_healthcheck.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/dashboards/grafana_dashboard_cluster_replication.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/dashboards/grafana_dashboard_topics_logs.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/data/sessions/b/f/bf1f0d0b5668d8be" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/data/sessions/d/7/d7659334a128b565" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/provisioning/dashboards/kafka.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/grafana/provisioning/datasources/datasource.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/template/jmx_exporter_kafka_broker.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure-api/src/com/code4nimbus/clojureapi/logic/misc.clj" beforeDir="false" afterPath="$PROJECT_DIR$/clojure-api/src/com/code4nimbus/clojureapi/logic/misc.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure-async/.idea/copilot/chatSessions/00000000000.xd" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure-async/.idea/copilot/chatSessions/blobs/version" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure-async/.idea/copilot/chatSessions/xd.lck" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure-async/src/com/code4nimbus/clojure_async/logic/misc.clj" beforeDir="false" afterPath="$PROJECT_DIR$/clojure-async/src/com/code4nimbus/clojure_async/logic/misc.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana/data/grafana.db" beforeDir="false" afterPath="$PROJECT_DIR$/grafana/data/grafana.db" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana/data/sessions/0/0/002b75b84c445bdc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana/data/sessions/2/5/25faec335f1c6941" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana/data/sessions/3/e/3e724fbc0a74c052" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana/data/sessions/7/3/730cfc1531e34442" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana/data/sessions/7/e/7e8cf81ec34df466" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana/data/sessions/8/e/8ef6a103ba744e08" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/grafana/data/sessions/d/4/d4a421a83e0ee84a" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/prometheus/config/prometheus.yml" beforeDir="false" afterPath="$PROJECT_DIR$/prometheus/config/prometheus.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;pelichero&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/pelichero/code4nimbus.git&quot;,
    &quot;accountId&quot;: &quot;c934f430-f779-4644-836b-6b2a3fcdd36e&quot;
  }
}</component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2dJSHhcNKDTmh3R89aaVcCqQYLM" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "Clojure REPL.REPL for clojure-api.executor": "Run",
    "Clojure REPL.REPL for clojure-async.executor": "Run",
    "Clojure REPL.REPL for clojure-simple-http.executor": "Run",
    "Docker.docker-compose.yml.clojure-api: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.clojure-async: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.conduktor-platform: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.datomic-transactor: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.grafana: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.jmx-kafka: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.kafka-schema-registry: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.kafka-ui: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.kafka1: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.kafka: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.server-app: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.zoo1: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "cursive.last.file.extension./Users/fepelichero/Downloads/projects/versioned-3/code4nimbus/clojure-api/src": "clj",
    "cursive.last.file.extension./Users/fepelichero/Downloads/projects/versioned-3/code4nimbus/clojure-async/src": "clj",
    "deletionFromPopupRequiresConfirmation": "false",
    "git-widget-placeholder": "kafka-logs",
    "jdk.selected.JAVA_MODULE": "11",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/fepelichero/Downloads/projects/versioned-3/code4nimbus/grafana",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.11428571",
    "settings.editor.selected.configurable": "reference.projectsettings.compiler.javacompiler"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/grafana" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/clojure-async" />
      <recent name="$PROJECT_DIR$/clojure-async/resources" />
      <recent name="$PROJECT_DIR$/clojure-async/src/com/code4nimbus/clojure_async/logic" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/resources/images" />
      <recent name="$PROJECT_DIR$/resources" />
      <recent name="$PROJECT_DIR$/clojure-api/test" />
      <recent name="$PROJECT_DIR$/clojure-api/src/com/code4nimbus/clojureapi" />
      <recent name="$PROJECT_DIR$/clojure-api/src/com/code4nimbus/clojureapi/diplomat" />
    </key>
  </component>
  <component name="ReplState" timestamp="1710849148871">{:repl-history {:ide [], :local [], :remote []}}</component>
  <component name="RunManager" selected="Docker.docker-compose.yml.grafana: Compose Deployment">
    <configuration default="true" type="Babashka" factoryName="BabashkaLocalRepl" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="bbPath" value="" />
      <setting name="parameters" value="" />
      <option name="PARENT_ENVS" value="true" />
      <setting name="workingDir" value="" />
      <setting name="focusEditor" value="false" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <option name="configVersion" value="1" />
      <option name="options" />
      <option name="profiles" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="displayName" value="" />
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <setting name="focusEditor" value="false" />
      <setting name="urlFile" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="aws.lambda" factoryName="Local">
      <option name="credentialProviderId" />
      <option name="regionId" />
      <option name="debugHost" value="localhost" />
      <option name="architecture" />
      <option name="environmentVariables">
        <map />
      </option>
      <option name="handler" />
      <option name="image" value="false" />
      <option name="logicalFunctionName" />
      <option name="memorySize" value="128" />
      <option name="pathMappings">
        <list />
      </option>
      <option name="platform" />
      <option name="runtime" />
      <option name="templateFile" />
      <option name="timeout" value="300" />
      <option name="useTemplate" value="false" />
      <option name="input" />
      <option name="inputIsFile" value="false" />
      <sam>
        <option name="additionalBuildArgs" />
        <option name="additionalLocalArgs" />
        <option name="buildInContainer" value="false" />
        <option name="dockerNetwork" />
        <option name="skipImagePull" value="false" />
      </sam>
      <method v="2" />
    </configuration>
    <configuration default="true" type="aws.lambda" factoryName="Remote">
      <option name="credentialProviderId" />
      <option name="regionId" />
      <option name="functionName" />
      <option name="input" />
      <option name="inputIsFile" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.grafana: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="grafana" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.jmx-kafka: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="jmx-kafka" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.kafka-ui: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="kafka-ui" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.kafka: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="kafka" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.jmx-kafka: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.kafka: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.grafana: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.kafka-ui: Compose Deployment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.grafana: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.jmx-kafka: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.kafka: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.kafka-ui: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cf0dda33-50f5-4858-bf66-4ce66df6359b" name="Changes" comment="" />
      <created>1709724601576</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1709724601576</updated>
    </task>
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>